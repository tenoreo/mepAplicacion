{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\React-native\\\\react-native-typescript-firebase\\\\src\\\\screens\\\\signup.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Input, Button } from \"../components\";\nimport firebase from 'firebase';\n\nvar App = function App(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var signup = function signup() {\n    var _await$firebase$auth$, user;\n\n    return _regeneratorRuntime.async(function signup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name && email && password)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password));\n\n          case 4:\n            _await$firebase$auth$ = _context.sent;\n            user = _await$firebase$auth$.user;\n\n            if (!user) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(user.uid).set({\n              name: name,\n              email: email,\n              password: password\n            }));\n\n          case 9:\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 14:\n            _context.next = 17;\n            break;\n\n          case 16:\n            Alert.alert(\"Error\", \"Missing Fields\");\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Sign Up Screen\"), React.createElement(Input, {\n    placeholder: \"Name\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Sign Up\",\n    onPress: signup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginHorizontal: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Already Have an Account?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate('login');\n    },\n    style: {\n      marginHorizontal: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'rgba(81,135,200,1)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Login Here\"))));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loginText: {\n    flexDirection: 'row',\n    marginVertical: 20\n  }\n});","map":{"version":3,"sources":["D:/React-native/react-native-typescript-firebase/src/screens/signup.tsx"],"names":["React","useState","TouchableOpacity","Input","Button","firebase","App","props","name","setName","email","setEmail","password","setPassword","signup","auth","createUserWithEmailAndPassword","user","firestore","collection","doc","uid","set","console","log","Alert","alert","styles","container","text","loginText","marginHorizontal","navigation","navigate","color","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","marginVertical"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { View, Text, StyleSheet, Alert } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { Input, Button } from '../components';\r\nimport firebase from 'firebase'\r\n \r\nconst App : FC = (props) => {\r\n    const [name, setName] = useState<string | null>(null);\r\n    const [email, setEmail] = useState<string | null>(null);\r\n    const [password, setPassword] = useState<string | null>(null);\r\n\r\n    const signup = async () => {\r\n        if(name && email && password){\r\n            try{\r\n             const {user} = await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n             if(user) {\r\n                 await firebase.firestore().collection('users').doc(user.uid).set({name, email, password});\r\n             }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n                \r\n            }\r\n\r\n        } else {\r\n            Alert.alert(`Error`, `Missing Fields`);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>Sign Up Screen</Text>\r\n            <Input placeholder=\"Name\" onChangeText={(text) => setName(text)} />\r\n            <Input placeholder=\"Email\" onChangeText={(text) => setEmail(text)} />\r\n            <Input placeholder=\"Password\" secureTextEntry onChangeText={(text) => setPassword(text)} />\r\n            <Button title=\"Sign Up\" onPress={signup} />\r\n            <View style={styles.loginText}>\r\n                <Text style={{marginHorizontal: 5}}>Already Have an Account?</Text>\r\n                <TouchableOpacity onPress={() => props.navigation.navigate('login')} style={{marginHorizontal: 5}}>\r\n                    <Text style={{color: 'rgba(81,135,200,1)'}}>Login Here</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    loginText: {\r\n        flexDirection: 'row',\r\n        marginVertical: 20\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}