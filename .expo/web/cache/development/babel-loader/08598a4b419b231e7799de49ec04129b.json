{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\React-native\\\\react-native-typescript-firebase\\\\src\\\\screens\\\\dashboard.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ApprovalRender, Button } from \"../components\";\nimport firebase from 'firebase';\nimport { FlatList } from 'react-native-gesture-handler';\n\nvar App = function App(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var fetchPendingPosts = function fetchPendingPosts() {\n    return _regeneratorRuntime.async(function fetchPendingPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase.firestore().collection('posts').where('approved', '==', false).onSnapshot(function (querySnapShot) {\n              var documents = querySnapShot.docs;\n              setPosts(documents);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _onApprove = function onApprove(id) {\n    var post;\n    return _regeneratorRuntime.async(function onApprove$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('posts').doc(id).get());\n\n          case 2:\n            post = _context2.sent;\n            post.ref.set({\n              approved: true\n            }, {\n              merge: true\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _onReject = function onReject(id) {\n    return _regeneratorRuntime.async(function onReject$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('posts').doc(id).delete());\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchPendingPosts();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Back\",\n    onPress: function onPress() {\n      return props.navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Dashboard Screen\"), React.createElement(View, {\n    style: {\n      height: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ApprovalRender, {\n        msg: item.data().msg,\n        timeStamp: item.data().timeStamp,\n        approved: item.data().approved,\n        onApprove: function onApprove() {\n          return _onApprove(item.id);\n        },\n        onReject: function onReject() {\n          return _onReject(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 60\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["D:/React-native/react-native-typescript-firebase/src/screens/dashboard.tsx"],"names":["React","useEffect","useState","ApprovalRender","Button","firebase","FlatList","App","props","posts","setPosts","fetchPendingPosts","firestore","collection","where","onSnapshot","querySnapShot","documents","docs","onApprove","id","doc","get","post","ref","set","approved","merge","onReject","delete","styles","container","navigation","goBack","height","item","data","msg","timeStamp","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport {ApprovalRender, Button} from '../components'\r\nimport firebase from 'firebase';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\n\r\nconst App : FC = (props) => {\r\n    const [posts, setPosts] = useState<any>(null);\r\n\r\n    const fetchPendingPosts = async () => {\r\n        firebase.firestore().collection('posts').where('approved', '==', false).onSnapshot(querySnapShot => {\r\n            const documents = querySnapShot.docs;\r\n            setPosts(documents)\r\n        })\r\n    }\r\n\r\n    const onApprove = async (id: string) => {\r\n        const post = await firebase.firestore().collection('posts').doc(id).get();\r\n        post.ref.set({approved: true}, {merge: true});\r\n    }\r\n    const onReject = async (id: string) => {\r\n        await firebase.firestore().collection('posts').doc(id).delete();\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchPendingPosts();\r\n    }, [])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Button title=\"Back\" onPress={() => props.navigation.goBack()} />\r\n            <Text>Dashboard Screen</Text>\r\n            <View style={{height: '50%'}}>\r\n            <FlatList data={posts} renderItem={({item}) => <ApprovalRender msg={item.data().msg} timeStamp={item.data().timeStamp} approved={item.data().approved} onApprove={() => onApprove(item.id)} onReject={() => onReject(item.id)} />} />\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}